# Use Python 3.12 slim image
FROM --platform=linux/amd64 python:3.12-slim

# Install dependencies and system tools
RUN apt update && apt install -y --no-install-recommends \
    wget \
    unzip \
    xvfb \
    gnupg2 \
    supervisor \
    build-essential \
    && wget https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_130.0.6723.58-1_amd64.deb \
    && apt-get install -y ./google-chrome-stable_130.0.6723.58-1_amd64.deb \
    && rm ./google-chrome-stable_130.0.6723.58-1_amd64.deb \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Download and install the exact version of ChromeDriver for the specific version of Chrome
RUN wget -N https://storage.googleapis.com/chrome-for-testing-public/130.0.6723.58/linux64/chromedriver-linux64.zip -P /tmp/ && \
    unzip /tmp/chromedriver-linux64.zip -d /tmp/ && \
    mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver && \
    rm /tmp/chromedriver-linux64.zip && \
    chmod +x /usr/local/bin/chromedriver

# Set environment variables for Chrome and ChromeDriver paths
ENV DISPLAY=:99 \
    CHROME_BIN=/usr/bin/google-chrome \
    CHROMEDRIVER_PATH=/usr/local/bin/chromedriver

# Copy the Python backend files
COPY . /app
WORKDIR /app

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

# Expose the port for Flask or Gunicorn
EXPOSE 8000

# Command to run Chrome in remote debugging mode and start Gunicorn for Flask app
CMD Xvfb :99 -screen 0 1920x1080x24 & \ 
    gunicorn -w 1 -b 0.0.0.0:8000 wsgi:app --log-level=debug --timeout 0
